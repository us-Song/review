읽은 목적 : 
객체지향의 개념을 알고 코딩을 하면서 객체지향 원칙을 따라서 하려고 노력을 했다. 하지만 하면서도 내가 잘 하고 있나 ? 하는 의문도 들고 객체지향을 제대로 알긴 아는건 맞나? 하는 의문이 들어 이 책을 읽게 되었다.

후기: 
읽고나서 다행이었던 점은 그래도 내가 알고 있던 지식이 100%는 아니더라도 대부분 맞았다는 점이다. 아마 나처럼 객체지향에 대한 의심?이 생긴 사람들도 이 책을 읽고나면 나와 같은 생각을 할 것 같다. 가장 달랐던 부분은 객체지향 설계의 순서였던 것 같다.
나는 항상 코딩을 할 때 객체의 속성, 메서드의 상세 구현부터 들어갔다. 그러다 보니 점점 코드가 지저분해지는 경우도 종종 있었다. 하지만 이 책에서는 객체의 속성보다는 어떠한 역할, 책임, 행위가 필요한지 먼저 생각하고 이후 객체에 할당을 하고 속성을 부여하는 것이 좋은 설계 방법이라고 가르쳐준다. 
평소 나는 속성에 집중을 해서 코드를 짰기 때문에 좋지 못한 코드를 짜게됐던 것 같다. 
그리고 좋았던 또 한가지는 설계를 간단히 끝내고 최대한 빨리 구현에 돌입하라는 말이었다. 
항상 뭐 빽빽하게 구상하고 여러번 사수님께 컨펌받고 또 컨펌받고 또 수정하고 설계 단계에서 많은 시간을 소비했다. 하지만 설계에서 쓴 시간만큼 만족스러운 결과물은 나오지 않았다. 책에서는 나 처럼 하지말고 구조가 떠오른다면 바로 구현에 돌입하라고 해준다.
그리고 코드를 작성해가면서 객체들의 상호작용을 그리라 한다. 그리고 이러한 방식이 테스트-주도 설계로 구현하는 사람들이 하는 작업이라는 것을 알려준다. 평소 테스트-주도 설계를 하는 이유를 명확히 모르고 있었기 때문에 이러한 내용이 많이 도움이 됐고, 
앞으로의 고딩 방식도 이 가르침을 따를 것 같다. 
너무 사전적인 정의에 얽메여서 오히려 객체지향의 개념을 헤쳤었지만, 이 책을 통해 좀 더 유연한 사고를 가지게 된 것 같아서 읽길 잘했다는 생각이 든다. 

추천: 
나처럼 객체지향의 사전적 의미에 얽메여 있고, 자신의 방식에 의문이 있던 사람에게 추천하고 싶다. 또한 무거운 내용이 아니고 책도 술술 잘읽혀서 어떤 개발자가 읽어도 좋을 것 같다 
